#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DSaw
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DoubleSaw")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertOrderItems(OrderItems instance);
    partial void UpdateOrderItems(OrderItems instance);
    partial void DeleteOrderItems(OrderItems instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertOrders(Orders instance);
    partial void UpdateOrders(Orders instance);
    partial void DeleteOrders(Orders instance);
    partial void InsertAngleChangeStates(AngleChangeStates instance);
    partial void UpdateAngleChangeStates(AngleChangeStates instance);
    partial void DeleteAngleChangeStates(AngleChangeStates instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DSaw.Properties.Settings.Default.DoubleSawConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<OrderItems> OrderItems
		{
			get
			{
				return this.GetTable<OrderItems>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<Orders> Orders
		{
			get
			{
				return this.GetTable<Orders>();
			}
		}
		
		public System.Data.Linq.Table<AngleChangeStates> AngleChangeStates
		{
			get
			{
				return this.GetTable<AngleChangeStates>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItems")]
	public partial class OrderItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OrderID;
		
		private string _OrderName;
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<double> _Length;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _LeftAngle;
		
		private System.Nullable<int> _RightAngle;
		
		private string _Note1;
		
		private string _LengthNote;
		
		private string _QuantityNote;
		
		private string _DoorID;
		
		private string _Note2;
		
		private string _Note3;
		
		private string _Note4;
		
		private System.Nullable<int> _ItemState;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<int> _GoodQuantity;
		
		private System.Nullable<int> _BadQuantity;
		
		private System.Nullable<int> _CutTimes;
		
		private string _CutDateTime;
		
		private string _User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(System.Nullable<int> value);
    partial void OnOrderIDChanged();
    partial void OnOrderNameChanging(string value);
    partial void OnOrderNameChanged();
    partial void OnItemIDChanging(System.Nullable<int> value);
    partial void OnItemIDChanged();
    partial void OnLengthChanging(System.Nullable<double> value);
    partial void OnLengthChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnLeftAngleChanging(System.Nullable<int> value);
    partial void OnLeftAngleChanged();
    partial void OnRightAngleChanging(System.Nullable<int> value);
    partial void OnRightAngleChanged();
    partial void OnNote1Changing(string value);
    partial void OnNote1Changed();
    partial void OnLengthNoteChanging(string value);
    partial void OnLengthNoteChanged();
    partial void OnQuantityNoteChanging(string value);
    partial void OnQuantityNoteChanged();
    partial void OnDoorIDChanging(string value);
    partial void OnDoorIDChanged();
    partial void OnNote2Changing(string value);
    partial void OnNote2Changed();
    partial void OnNote3Changing(string value);
    partial void OnNote3Changed();
    partial void OnNote4Changing(string value);
    partial void OnNote4Changed();
    partial void OnItemStateChanging(System.Nullable<int> value);
    partial void OnItemStateChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnGoodQuantityChanging(System.Nullable<int> value);
    partial void OnGoodQuantityChanged();
    partial void OnBadQuantityChanging(System.Nullable<int> value);
    partial void OnBadQuantityChanged();
    partial void OnCutTimesChanging(System.Nullable<int> value);
    partial void OnCutTimesChanged();
    partial void OnCutDateTimeChanging(string value);
    partial void OnCutDateTimeChanged();
    partial void OnUserChanging(string value);
    partial void OnUserChanged();
    #endregion
		
		public OrderItems()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int")]
		public System.Nullable<int> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderName", DbType="NVarChar(50)")]
		public string OrderName
		{
			get
			{
				return this._OrderName;
			}
			set
			{
				if ((this._OrderName != value))
				{
					this.OnOrderNameChanging(value);
					this.SendPropertyChanging();
					this._OrderName = value;
					this.SendPropertyChanged("OrderName");
					this.OnOrderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int")]
		public System.Nullable<int> ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Float")]
		public System.Nullable<double> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftAngle", DbType="Int")]
		public System.Nullable<int> LeftAngle
		{
			get
			{
				return this._LeftAngle;
			}
			set
			{
				if ((this._LeftAngle != value))
				{
					this.OnLeftAngleChanging(value);
					this.SendPropertyChanging();
					this._LeftAngle = value;
					this.SendPropertyChanged("LeftAngle");
					this.OnLeftAngleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightAngle", DbType="Int")]
		public System.Nullable<int> RightAngle
		{
			get
			{
				return this._RightAngle;
			}
			set
			{
				if ((this._RightAngle != value))
				{
					this.OnRightAngleChanging(value);
					this.SendPropertyChanging();
					this._RightAngle = value;
					this.SendPropertyChanged("RightAngle");
					this.OnRightAngleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note1", DbType="NVarChar(100)")]
		public string Note1
		{
			get
			{
				return this._Note1;
			}
			set
			{
				if ((this._Note1 != value))
				{
					this.OnNote1Changing(value);
					this.SendPropertyChanging();
					this._Note1 = value;
					this.SendPropertyChanged("Note1");
					this.OnNote1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthNote", DbType="NVarChar(50)")]
		public string LengthNote
		{
			get
			{
				return this._LengthNote;
			}
			set
			{
				if ((this._LengthNote != value))
				{
					this.OnLengthNoteChanging(value);
					this.SendPropertyChanging();
					this._LengthNote = value;
					this.SendPropertyChanged("LengthNote");
					this.OnLengthNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityNote", DbType="NVarChar(50)")]
		public string QuantityNote
		{
			get
			{
				return this._QuantityNote;
			}
			set
			{
				if ((this._QuantityNote != value))
				{
					this.OnQuantityNoteChanging(value);
					this.SendPropertyChanging();
					this._QuantityNote = value;
					this.SendPropertyChanged("QuantityNote");
					this.OnQuantityNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoorID", DbType="NVarChar(50)")]
		public string DoorID
		{
			get
			{
				return this._DoorID;
			}
			set
			{
				if ((this._DoorID != value))
				{
					this.OnDoorIDChanging(value);
					this.SendPropertyChanging();
					this._DoorID = value;
					this.SendPropertyChanged("DoorID");
					this.OnDoorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note2", DbType="NVarChar(100)")]
		public string Note2
		{
			get
			{
				return this._Note2;
			}
			set
			{
				if ((this._Note2 != value))
				{
					this.OnNote2Changing(value);
					this.SendPropertyChanging();
					this._Note2 = value;
					this.SendPropertyChanged("Note2");
					this.OnNote2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note3", DbType="NVarChar(50)")]
		public string Note3
		{
			get
			{
				return this._Note3;
			}
			set
			{
				if ((this._Note3 != value))
				{
					this.OnNote3Changing(value);
					this.SendPropertyChanging();
					this._Note3 = value;
					this.SendPropertyChanged("Note3");
					this.OnNote3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note4", DbType="NVarChar(50)")]
		public string Note4
		{
			get
			{
				return this._Note4;
			}
			set
			{
				if ((this._Note4 != value))
				{
					this.OnNote4Changing(value);
					this.SendPropertyChanging();
					this._Note4 = value;
					this.SendPropertyChanged("Note4");
					this.OnNote4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemState", DbType="Int")]
		public System.Nullable<int> ItemState
		{
			get
			{
				return this._ItemState;
			}
			set
			{
				if ((this._ItemState != value))
				{
					this.OnItemStateChanging(value);
					this.SendPropertyChanging();
					this._ItemState = value;
					this.SendPropertyChanged("ItemState");
					this.OnItemStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodQuantity", DbType="Int")]
		public System.Nullable<int> GoodQuantity
		{
			get
			{
				return this._GoodQuantity;
			}
			set
			{
				if ((this._GoodQuantity != value))
				{
					this.OnGoodQuantityChanging(value);
					this.SendPropertyChanging();
					this._GoodQuantity = value;
					this.SendPropertyChanged("GoodQuantity");
					this.OnGoodQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadQuantity", DbType="Int")]
		public System.Nullable<int> BadQuantity
		{
			get
			{
				return this._BadQuantity;
			}
			set
			{
				if ((this._BadQuantity != value))
				{
					this.OnBadQuantityChanging(value);
					this.SendPropertyChanging();
					this._BadQuantity = value;
					this.SendPropertyChanged("BadQuantity");
					this.OnBadQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutTimes", DbType="Int")]
		public System.Nullable<int> CutTimes
		{
			get
			{
				return this._CutTimes;
			}
			set
			{
				if ((this._CutTimes != value))
				{
					this.OnCutTimesChanging(value);
					this.SendPropertyChanging();
					this._CutTimes = value;
					this.SendPropertyChanged("CutTimes");
					this.OnCutTimesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutDateTime", DbType="NVarChar(50)")]
		public string CutDateTime
		{
			get
			{
				return this._CutDateTime;
			}
			set
			{
				if ((this._CutDateTime != value))
				{
					this.OnCutDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CutDateTime = value;
					this.SendPropertyChanged("CutDateTime");
					this.OnCutDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User]", Storage="_User", DbType="NVarChar(50)")]
		public string User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					this.OnUserChanging(value);
					this.SendPropertyChanging();
					this._User = value;
					this.SendPropertyChanged("User");
					this.OnUserChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _UserName;
		
		private string _PassWord;
		
		private string _Role;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public Users()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Orders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _OrderName;
		
		private string _OrderDate;
		
		private string _Importer;
		
		private System.Nullable<int> _OrderState;
		
		private System.Nullable<int> _TotalQuantity;
		
		private System.Nullable<int> _Wait;
		
		private System.Nullable<int> _Delayed;
		
		private System.Nullable<int> _Short;
		
		private System.Nullable<int> _Completed;
		
		private string _DoneRate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrderNameChanging(string value);
    partial void OnOrderNameChanged();
    partial void OnOrderDateChanging(string value);
    partial void OnOrderDateChanged();
    partial void OnImporterChanging(string value);
    partial void OnImporterChanged();
    partial void OnOrderStateChanging(System.Nullable<int> value);
    partial void OnOrderStateChanged();
    partial void OnTotalQuantityChanging(System.Nullable<int> value);
    partial void OnTotalQuantityChanged();
    partial void OnWaitChanging(System.Nullable<int> value);
    partial void OnWaitChanged();
    partial void OnDelayedChanging(System.Nullable<int> value);
    partial void OnDelayedChanged();
    partial void OnShortChanging(System.Nullable<int> value);
    partial void OnShortChanged();
    partial void OnCompletedChanging(System.Nullable<int> value);
    partial void OnCompletedChanged();
    partial void OnDoneRateChanging(string value);
    partial void OnDoneRateChanged();
    #endregion
		
		public Orders()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderName", DbType="NVarChar(100)")]
		public string OrderName
		{
			get
			{
				return this._OrderName;
			}
			set
			{
				if ((this._OrderName != value))
				{
					this.OnOrderNameChanging(value);
					this.SendPropertyChanging();
					this._OrderName = value;
					this.SendPropertyChanged("OrderName");
					this.OnOrderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="NVarChar(50)")]
		public string OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Importer", DbType="NVarChar(50)")]
		public string Importer
		{
			get
			{
				return this._Importer;
			}
			set
			{
				if ((this._Importer != value))
				{
					this.OnImporterChanging(value);
					this.SendPropertyChanging();
					this._Importer = value;
					this.SendPropertyChanged("Importer");
					this.OnImporterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderState", DbType="Int")]
		public System.Nullable<int> OrderState
		{
			get
			{
				return this._OrderState;
			}
			set
			{
				if ((this._OrderState != value))
				{
					this.OnOrderStateChanging(value);
					this.SendPropertyChanging();
					this._OrderState = value;
					this.SendPropertyChanged("OrderState");
					this.OnOrderStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantity", DbType="Int")]
		public System.Nullable<int> TotalQuantity
		{
			get
			{
				return this._TotalQuantity;
			}
			set
			{
				if ((this._TotalQuantity != value))
				{
					this.OnTotalQuantityChanging(value);
					this.SendPropertyChanging();
					this._TotalQuantity = value;
					this.SendPropertyChanged("TotalQuantity");
					this.OnTotalQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wait", DbType="Int")]
		public System.Nullable<int> Wait
		{
			get
			{
				return this._Wait;
			}
			set
			{
				if ((this._Wait != value))
				{
					this.OnWaitChanging(value);
					this.SendPropertyChanging();
					this._Wait = value;
					this.SendPropertyChanged("Wait");
					this.OnWaitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delayed", DbType="Int")]
		public System.Nullable<int> Delayed
		{
			get
			{
				return this._Delayed;
			}
			set
			{
				if ((this._Delayed != value))
				{
					this.OnDelayedChanging(value);
					this.SendPropertyChanging();
					this._Delayed = value;
					this.SendPropertyChanged("Delayed");
					this.OnDelayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Short", DbType="Int")]
		public System.Nullable<int> Short
		{
			get
			{
				return this._Short;
			}
			set
			{
				if ((this._Short != value))
				{
					this.OnShortChanging(value);
					this.SendPropertyChanging();
					this._Short = value;
					this.SendPropertyChanged("Short");
					this.OnShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int")]
		public System.Nullable<int> Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoneRate", DbType="NVarChar(50)")]
		public string DoneRate
		{
			get
			{
				return this._DoneRate;
			}
			set
			{
				if ((this._DoneRate != value))
				{
					this.OnDoneRateChanging(value);
					this.SendPropertyChanging();
					this._DoneRate = value;
					this.SendPropertyChanged("DoneRate");
					this.OnDoneRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AngleChangeStates")]
	public partial class AngleChangeStates : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AngleName;
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private System.Nullable<int> _LeftAngle;
		
		private System.Nullable<int> _RightAngle;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAngleNameChanging(string value);
    partial void OnAngleNameChanged();
    partial void OnChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDateChanged();
    partial void OnLeftAngleChanging(System.Nullable<int> value);
    partial void OnLeftAngleChanged();
    partial void OnRightAngleChanging(System.Nullable<int> value);
    partial void OnRightAngleChanged();
    #endregion
		
		public AngleChangeStates()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AngleName", DbType="NVarChar(50)")]
		public string AngleName
		{
			get
			{
				return this._AngleName;
			}
			set
			{
				if ((this._AngleName != value))
				{
					this.OnAngleNameChanging(value);
					this.SendPropertyChanging();
					this._AngleName = value;
					this.SendPropertyChanged("AngleName");
					this.OnAngleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftAngle", DbType="Int")]
		public System.Nullable<int> LeftAngle
		{
			get
			{
				return this._LeftAngle;
			}
			set
			{
				if ((this._LeftAngle != value))
				{
					this.OnLeftAngleChanging(value);
					this.SendPropertyChanging();
					this._LeftAngle = value;
					this.SendPropertyChanged("LeftAngle");
					this.OnLeftAngleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightAngle", DbType="Int")]
		public System.Nullable<int> RightAngle
		{
			get
			{
				return this._RightAngle;
			}
			set
			{
				if ((this._RightAngle != value))
				{
					this.OnRightAngleChanging(value);
					this.SendPropertyChanging();
					this._RightAngle = value;
					this.SendPropertyChanged("RightAngle");
					this.OnRightAngleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
